//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public JoystickDirectionAngleListenerComponent joystickDirectionAngleListener { get { return (JoystickDirectionAngleListenerComponent)GetComponent(GameComponentsLookup.JoystickDirectionAngleListener); } }
    public bool hasJoystickDirectionAngleListener { get { return HasComponent(GameComponentsLookup.JoystickDirectionAngleListener); } }

    public void AddJoystickDirectionAngleListener(System.Collections.Generic.List<IJoystickDirectionAngleListener> newValue) {
        var index = GameComponentsLookup.JoystickDirectionAngleListener;
        var component = (JoystickDirectionAngleListenerComponent)CreateComponent(index, typeof(JoystickDirectionAngleListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceJoystickDirectionAngleListener(System.Collections.Generic.List<IJoystickDirectionAngleListener> newValue) {
        var index = GameComponentsLookup.JoystickDirectionAngleListener;
        var component = (JoystickDirectionAngleListenerComponent)CreateComponent(index, typeof(JoystickDirectionAngleListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveJoystickDirectionAngleListener() {
        RemoveComponent(GameComponentsLookup.JoystickDirectionAngleListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherJoystickDirectionAngleListener;

    public static Entitas.IMatcher<GameEntity> JoystickDirectionAngleListener {
        get {
            if (_matcherJoystickDirectionAngleListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.JoystickDirectionAngleListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherJoystickDirectionAngleListener = matcher;
            }

            return _matcherJoystickDirectionAngleListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddJoystickDirectionAngleListener(IJoystickDirectionAngleListener value) {
        var listeners = hasJoystickDirectionAngleListener
            ? joystickDirectionAngleListener.value
            : new System.Collections.Generic.List<IJoystickDirectionAngleListener>();
        listeners.Add(value);
        ReplaceJoystickDirectionAngleListener(listeners);
    }

    public void RemoveJoystickDirectionAngleListener(IJoystickDirectionAngleListener value, bool removeComponentWhenEmpty = true) {
        var listeners = joystickDirectionAngleListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveJoystickDirectionAngleListener();
        } else {
            ReplaceJoystickDirectionAngleListener(listeners);
        }
    }
}
