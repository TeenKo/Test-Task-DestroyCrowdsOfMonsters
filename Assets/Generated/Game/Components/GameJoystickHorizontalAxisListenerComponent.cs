//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public JoystickHorizontalAxisListenerComponent joystickHorizontalAxisListener { get { return (JoystickHorizontalAxisListenerComponent)GetComponent(GameComponentsLookup.JoystickHorizontalAxisListener); } }
    public bool hasJoystickHorizontalAxisListener { get { return HasComponent(GameComponentsLookup.JoystickHorizontalAxisListener); } }

    public void AddJoystickHorizontalAxisListener(System.Collections.Generic.List<IJoystickHorizontalAxisListener> newValue) {
        var index = GameComponentsLookup.JoystickHorizontalAxisListener;
        var component = (JoystickHorizontalAxisListenerComponent)CreateComponent(index, typeof(JoystickHorizontalAxisListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceJoystickHorizontalAxisListener(System.Collections.Generic.List<IJoystickHorizontalAxisListener> newValue) {
        var index = GameComponentsLookup.JoystickHorizontalAxisListener;
        var component = (JoystickHorizontalAxisListenerComponent)CreateComponent(index, typeof(JoystickHorizontalAxisListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveJoystickHorizontalAxisListener() {
        RemoveComponent(GameComponentsLookup.JoystickHorizontalAxisListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherJoystickHorizontalAxisListener;

    public static Entitas.IMatcher<GameEntity> JoystickHorizontalAxisListener {
        get {
            if (_matcherJoystickHorizontalAxisListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.JoystickHorizontalAxisListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherJoystickHorizontalAxisListener = matcher;
            }

            return _matcherJoystickHorizontalAxisListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddJoystickHorizontalAxisListener(IJoystickHorizontalAxisListener value) {
        var listeners = hasJoystickHorizontalAxisListener
            ? joystickHorizontalAxisListener.value
            : new System.Collections.Generic.List<IJoystickHorizontalAxisListener>();
        listeners.Add(value);
        ReplaceJoystickHorizontalAxisListener(listeners);
    }

    public void RemoveJoystickHorizontalAxisListener(IJoystickHorizontalAxisListener value, bool removeComponentWhenEmpty = true) {
        var listeners = joystickHorizontalAxisListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveJoystickHorizontalAxisListener();
        } else {
            ReplaceJoystickHorizontalAxisListener(listeners);
        }
    }
}
